<?xml version="1.0" encoding="UTF-8"?>
<shaders>
    <shader name="Simple">
        <vertex>
            varying vec2 vUv;
            void main() {
                vUv = uv;
                gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
            }
        </vertex>
        <fragment>
            varying vec2 vUv;
            void main() {
                gl_FragColor = vec4( vec3( vUv, 0. ), 1. );

            }
        </fragment>
    </shader>
    <shader name="Oilspill">
        <vertex>
            attribute vec3 position;
            
            void main() {
                gl_Position = vec4(position, 1.0);
            }
        </vertex>
        <fragment><![CDATA[
            #ifdef GL_ES
            precision mediump float;
            #endif

            uniform float time;
            varying vec2 surfacePosition;

            void main() {
                vec2 position = surfacePosition * 100.;
                float x = position.x;
                float y = position.y;
                float t = time;

                float r = -0.0, g = -0.0, b = -0.0;
                for(int i = 1; i < 12; i++) {
                    t += sin(float(i)) + r + g + b;
                    r += sin(x / 40. + t + sin(y / 40.)) * sin(y/25. + t + sin(x/20. - t));
                    g += sin(x / 80. - t + sin(y / 20.)) * sin(y/50. - t + sin(x/40. + t));
                    b += sin(x / 60. + t + sin(y / 30.)) * sin(y/25. + t + sin(x/40. - t));
                }
                vec3 rgb = abs(normalize(vec3(r, g, b)));
                rgb = floor(rgb * 5.) / 5.;
                gl_FragColor = vec4(rgb, 1.);
            }
        ]]</fragment>
    </shader>
</shaders>
